{
    "compilerOptions": {
        /* Basic Options */
        "incremental": true, /* Enable incremental compilation */
        "target": "esnext", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
        "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        "declaration": true, /* Generates corresponding '.d.ts' file. */
        "declarationMap": true, /* Generates a sourcemap for each corresponding '.d.ts' file. */
        "sourceMap": true, /* Generates corresponding '.map' file. */
        "outDir": "./out", /* Redirect output structure to the directory. */
        "importHelpers": true, /* Import emit helpers from 'tslib'. */
        "isolatedModules": true, /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Strict Type-Checking Options */
        "strict": true, /* Enable all strict type-checking options. */
        "alwaysStrict": true, /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        "noUnusedLocals": true, /* Report errors on unused locals. */
        "noUnusedParameters": true, /* Report errors on unused parameters. */
        "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        /* Source Map Options */
        // "inlineSourceMap": true, /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true, /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
        /* Experimental Options */
        "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
        "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
        /* Advanced Options */
        "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
    }
}